import telebot
import random
import time, threading, schedule

bot = telebot.TeleBot("7946722160:AAHNUi5lcmh9fhqIPdKtiw_cWF8AkRCPsUs")
last_flip = None
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "Привет! Я твой Telegram бот. Напиши что-нибудь! Используй команду /help, чтобы узнать все доступные команды.")

@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = (
        "/start - Приветствие и инструкция по использованию бота.\n"
        "/help - Список всех доступных команд и их назначение.\n"
        "/flip - Подбросить монету и узнать результат (Орёл или Решка).\n"
        "/last - Узнать последний результат подбрасывания монеты.\n"
        "/Привет - Ответ от бота на приветствие.\n"
        "/Пока - Ответ от бота на прощание.\n"
        "/heh число - Пишет he число раз."
        "/set <seconds> — Установить таймер на указанное количество секунд; по истечении времени бот отправит сообщение.\n"
        "/unset — Остановить таймер (очистить все запланированные задачи для текущего чата)."
    )
    bot.reply_to(message, help_text)


@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    bot.reply_to(message, "Hi! Use /set <seconds> to set a timer")


def beep(chat_id) -> None:
    """Send the beep message."""
    bot.send_message(chat_id, text='Время прошло!')


@bot.message_handler(commands=['set'])
def set_timer(message):
    args = message.text.split()
    if len(args) > 1 and args[1].isdigit():
        sec = int(args[1])
        schedule.every(sec).seconds.do(beep, message.chat.id).tag(message.chat.id)
    else:
        bot.reply_to(message, 'Usage: /set <seconds>')


@bot.message_handler(commands=['unset'])
def unset_timer(message):
    schedule.clear(message.chat.id)


if __name__ == '__main__':
    threading.Thread(target=bot.infinity_polling, name='bot_infinity_polling', daemon=True).start()
    while True:
        schedule.run_pending()
        time.sleep(1)


 # Обработчик команды '/heh'
@bot.message_handler(commands=['heh'])
def send_heh(message):
    count_heh = int(message.text.split()[1]) if len(message.text.split()) > 1 else 5
    bot.reply_to(message, "he" * count_heh)

@bot.message_handler(commands=['flip'])
def flip_coin(message):
    global last_flip
    result = random.choice(['Орёл', 'Решка'])
    last_flip = result
    bot.reply_to(message, f'Монета подброшена: {result}')

@bot.message_handler(commands=['last'])
def last_flip_command(message):
    global last_flip
    if last_flip is None:
        bot.reply_to(message, 'Монета ещё не была подброшена.')
    else:
        bot.reply_to(message, f'Последний результат подбрасывания монеты: {last_flip}')


@bot.message_handler(commands=['привет'])
def send_hello(message):
    bot.reply_to(message, "Привет! Как дела?")

@bot.message_handler(commands=['пока'])
def send_bye(message):
    bot.reply_to(message, "Пока! Удачи!")

@bot.message_handler(func=lambda message: True)
def echo_all(message):
    bot.reply_to(message, message.text)

bot.polling()
